steps:
# Build the user-service
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/user-service-test:$COMMIT_SHA', 
  '-f', './user-service/Dockerfile.prod',
  './user-service']

# Push the user-service image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/user-service-test:$COMMIT_SHA']

# Deploy the user-service to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args: ['run', 'deploy', '${_USR_CLOUD_RUN_NAME}', 
  '--image', 'gcr.io/$PROJECT_ID/user-service-test:$COMMIT_SHA', 
  '--region', '${_REGION}',
  '--port', '${_USER_PORT}',
  "--allow-unauthenticated"
  ]

# Build the question-service
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/question-service-test:$COMMIT_SHA', 
  '-f', './question-service/Dockerfile.prod',
  './question-service']

# Push the question-service image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/question-service-test:$COMMIT_SHA']

# Deploy question-service
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args: ['run', 'deploy', '${_QN_CLOUD_RUN_NAME}', 
  '--image', 'gcr.io/$PROJECT_ID/question-service-test:$COMMIT_SHA', 
  '--region', '${_REGION}',
  '--port', '${_QN_PORT}',
  "--allow-unauthenticated"
  ]

# Build matching-service
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/matching-service-test:$COMMIT_SHA', 
  '-f', './matching-service/Dockerfile.prod',
  './matching-service']

# Push the matching-service image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/matching-service-test:$COMMIT_SHA']

# Deploy matching-service
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args: ['run', 'deploy', '${_MS_CLOUD_RUN_NAME}', 
  '--image', 'gcr.io/$PROJECT_ID/matching-service-test:$COMMIT_SHA', 
  '--region', '${_REGION}',
  '--port', '${_MS_PORT}',
  "--allow-unauthenticated"
  ]

# Build the frontend service
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/frontend-service-test:$COMMIT_SHA', 
  # specifiy which dockerfile to use
  '-f', './frontend/Dockerfile.stage',
  './frontend'
  ]

# Push the frontend-service image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/frontend-service-test:$COMMIT_SHA']

# Deploy frontend-service
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args: ['run', 'deploy', '${_FE_CLOUD_RUN_NAME}', 
  '--image', 'gcr.io/$PROJECT_ID/frontend-service-test:$COMMIT_SHA', 
  '--region', '${_REGION}',
  '--port', '${_FE_PORT}',
  "--allow-unauthenticated"
  ]

# Images to store in Container Registry
images:
- 'gcr.io/$PROJECT_ID/user-service-test:$COMMIT_SHA'
- 'gcr.io/$PROJECT_ID/question-service-test:$COMMIT_SHA'
- 'gcr.io/$PROJECT_ID/matching-service-test:$COMMIT_SHA'
- 'gcr.io/$PROJECT_ID/frontend-service-test:$COMMIT_SHA'
