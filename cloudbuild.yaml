steps:
# Build the user-service
- name: 'gcr.io/cloud-builders/docker'
# Service name can be replaced as container name
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA', './user-service']

# Push the user-service image to Container Registry
# Service name here can also be replaced
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA']

# Deploy the user-service to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args: ['run', 'deploy', '${_SERVICE_NAME}', 
  '--image', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA', 
  '--region', '${_REGION}',
  '--port', '${_PORT}',
  # Fack no .env file here
  # '--env-vars-file', './.env',
  # future iteration maybe i set it here see how
  # '--set-env-vars=',
  # ''
  "--allow-unauthenticated"
  ]
  # if need be in the future
  # env:

# Build the frontend service
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['build', '-t', 'gcr.io/$PROJECT_ID/frontend', './frontend']
#   dir: 'your-project-directory'

# # Build the question-service
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['build', '-t', 'gcr.io/$PROJECT_ID/question-service', './question-service']
#   dir: 'your-project-directory'


# testing
images:
# - 'gcr.io/$PROJECT_ID/frontend'
# - 'gcr.io/$PROJECT_ID/question-service'
- 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA'

